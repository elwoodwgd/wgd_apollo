#include "PID.h"

PID S3010DutyCamera;
PID S3010DutyInductive;




//----------------------------------------------------------------------
//  @brief      位置式PID初始化
//  @param      
//  @return     				
//  @since      
//  Sample usage: 
//------------------------------------------------------------------------
void SpacePIDInit(PID *sptr)
{
        sptr->SumErr=0;
        sptr->LastErr=0;
        sptr->Err=0;
}


//----------------------------------------------------------------------
//  @brief      位置式PID舵机控制
//  @param      
//  @return     				
//  @since      
//  Sample usage: 
//------------------------------------------------------------------------
int SpaceCameraPID(PID *sptr,int NewPoint,int SetPoint)
{
        int Actual;             //最后得出的实际输出值
        
        sptr->Err=SetPoint-NewPoint;            //计算误差
        
        Actual =(int)(sptr->Kp*sptr->Err+sptr->Kd*(sptr->Err-sptr->LastErr));
        
        sptr->LastErr=sptr->Err;
        
        return ServoMid+Actual;
        
        
}

//-------------------------------------------------------------------------------------------------------------------
//  @brief     计算误差
//  @param      
//  @return     NULL					
//  @since      
//  Sample usage: 
//-------------------------------------------------------------------------------------------------------------------
int SpaceAdPID(PID *sptr)
{
        int Actual;             //最后得出的实际输出值
        
        GET_AD_Voltage();
        AD_zero_to_one();
        sptr->Err=500*(AD_Voltage_guiyi[0]-AD_Voltage_guiyi[1])/(AD_Voltage_guiyi[0]*AD_Voltage_guiyi[1]);
        sptr->Err=limit(sptr->Err,100);
       
//        if(sptr->Err>0)
//        {
//                sptr->Err-=3;
//        }
//        else if(sptr->Err<0)
//        {
//                sptr->Err+=3;
//        }
//        
        OLED_Print_Num1(0,4,sptr->Err);
        
        Actual =(int)(sptr->Kp*sptr->Err+sptr->Kd*(sptr->Err-sptr->LastErr));
        
        sptr->LastErr=sptr->Err;
        
        return ServoMid+Actual;
}


